{"version":3,"sources":["views/LeftView.js","components/AddItem.js","components/Item.js","components/Items.js","actions/actionTypes.js","components/Comment.js","components/NoComments.js","components/AddComment.js","utils/randomHexColor.js","components/NoCurrentItem.js","components/Comments.js","views/RightView.js","App.js","serviceWorker.js","reducers/itemsReducer.js","reducers/currentItemReducer.js","reducers/commentsReducer.js","reducers/index.js","index.js","localStorageRedux.js"],"names":["LeftView","className","AddItem","addItem","useState","value","setValue","onSubmit","e","preventDefault","item","id","v4","title","isActive","type","placeholder","onChange","target","connect","state","comments","entries","removeItem","selectItem","currentItem","removeCurrentItem","removeAllComments","handleItemClick","localItem","localComments","setLocalComments","isActiveClass","setIsActiveClass","useEffect","onClick","bind","onKeyDown","role","tabIndex","length","items","selectedEntry","dispatch","payload","map","key","Comment","comment","style","background","avatar","text","NoComments","AddComment","addComment","currentItemId","rows","event","Math","random","toString","keyCode","ctrlKey","NoCurrentItem","isItemNullOrEmpty","Object","keys","currentItemComments","setCurrentItemComments","split","i","RightView","App","Boolean","window","location","hostname","match","handlers","localItems","filter","initialState","normalComments","push","combineReducers","action","DEFAULT","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","preloadedState","serializedState","localStorage","getItem","JSON","parse","err","console","error","loadState","store","createStore","rootReducer","subscribe","throttle","stringify","setItem","saveState","getState","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9ccddab9.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../scss/LeftView.scss';\r\n\r\nconst LeftView = () => (\r\n  <div className=\"text-left p-4\">\r\n    <h1 className=\"left-view--h1\">DIARY APP</h1>\r\n    <p className=\"left-view--p\">Comment with no sense</p>\r\n  </div>\r\n);\r\n\r\nexport default LeftView;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 } from 'node-uuid';\r\n\r\nconst AddItem = ({ addItem }) => {\r\n  const [value, setValue] = useState('');\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const item = {\r\n      id: v4(),\r\n      title: value,\r\n      isActive: false\r\n    };\r\n\r\n    addItem(item);\r\n\r\n    setValue('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"form-row\">\r\n        <div className=\"col-9 d-flex flex-grow-1 pl-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Type name here...\"\r\n            value={value}\r\n            onChange={e => setValue(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"col-3\">\r\n          <button type=\"submit\" className=\"btn btn-primary w-100 text-white\">\r\n            Add new\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddItem.propTypes = {\r\n  addItem: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Item = ({\r\n  item,\r\n  removeItem,\r\n  selectItem,\r\n  currentItem,\r\n  removeCurrentItem,\r\n  comments,\r\n  removeAllComments\r\n}) => {\r\n  const handleButtonClick = id => {\r\n    if (id === currentItem.id) {\r\n      removeCurrentItem();\r\n    }\r\n\r\n    removeAllComments(id);\r\n    removeItem(id);\r\n  };\r\n\r\n  const handleItemClick = localItem => selectItem(localItem);\r\n\r\n  const [localComments, setLocalComments] = useState([]);\r\n\r\n  const [isActiveClass, setIsActiveClass] = useState('col-12');\r\n\r\n  useEffect(() => {\r\n    if (item?.id === currentItem?.id) {\r\n      setIsActiveClass('col-12 right-view--active');\r\n    } else {\r\n      setIsActiveClass('col-12');\r\n    }\r\n  }, [currentItem, item]);\r\n\r\n  useEffect(() => {\r\n    setLocalComments(comments[item.id]);\r\n  }, [comments, item.id]);\r\n\r\n  return (\r\n    <div className={isActiveClass}>\r\n      <div className=\"right-view--item\">\r\n        <div className=\"row d-flex align-items-center\">\r\n          <div\r\n            className=\"col-10\"\r\n            onClick={handleItemClick.bind(null, item)}\r\n            onKeyDown={handleItemClick.bind(null, item)}\r\n            role=\"button\"\r\n            tabIndex=\"-1\"\r\n          >\r\n            <div className=\"p-3 font-weight-bold\">\r\n              {item.title}{' '}\r\n              <span className=\"badge badge-pill badge-primary\">\r\n                {localComments?.length}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-danger\"\r\n              onClick={handleButtonClick.bind(null, item.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nItem.propTypes = {\r\n  item: PropTypes.objectOf(PropTypes.any).isRequired,\r\n  removeItem: PropTypes.func.isRequired,\r\n  selectItem: PropTypes.func.isRequired,\r\n  removeCurrentItem: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  comments: state.comments.entries\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(Item);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  ADD_ITEM,\r\n  REMOVE_ITEM,\r\n  SELECT_ITEM,\r\n  REMOVE_CURRENT_ITEM,\r\n  REMOVE_ALL_COMMENTS\r\n} from '../actions/actionTypes';\r\nimport AddItem from './AddItem';\r\nimport Item from './Item';\r\n\r\nconst Items = ({\r\n  addItem,\r\n  removeItem,\r\n  items,\r\n  currentItem,\r\n  selectItem,\r\n  removeCurrentItem,\r\n  removeAllComments\r\n}) => {\r\n  return (\r\n    <div className=\"card shadow-sm bg-white rounded\">\r\n      <div className=\"card-body\">\r\n        <h2 className=\"card-title right-view--title pb-3\">Items</h2>\r\n        <AddItem addItem={addItem} />\r\n        <div className=\"row pt-3\">\r\n          {items.map(item => (\r\n            <Item\r\n              currentItem={currentItem}\r\n              item={item}\r\n              removeItem={removeItem}\r\n              removeCurrentItem={removeCurrentItem}\r\n              removeAllComments={removeAllComments}\r\n              selectItem={selectItem}\r\n              key={item.id}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  items: state.items.entries,\r\n  currentItem: state.currentItem.selectedEntry\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addItem: item => dispatch({ type: ADD_ITEM, payload: item }),\r\n    removeItem: id => dispatch({ type: REMOVE_ITEM, payload: id }),\r\n    selectItem: item => dispatch({ type: SELECT_ITEM, payload: item }),\r\n    removeCurrentItem: () => dispatch({ type: REMOVE_CURRENT_ITEM }),\r\n    removeAllComments: id =>\r\n      dispatch({ type: REMOVE_ALL_COMMENTS, payload: id })\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Items);\r\n","export const ADD_ITEM = 'ADD_ITEM';\r\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\r\nexport const SELECT_ITEM = 'SELECT_ITEM';\r\nexport const MAKE_ITEM_ACTIVE = 'MAKE_ITEM_ACTIVE';\r\nexport const REMOVE_CURRENT_ITEM = 'REMOVE_CURRENT_ITEM';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const REMOVE_ALL_COMMENTS = 'REMOVE_ALL_COMMENTS';\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Comment = ({ comment }) => {\r\n  return (\r\n    <div className=\"w-100 comment--item\">\r\n      <div className=\"form-row\">\r\n        <div className=\"col-2 pl-4\">\r\n          <div\r\n            className=\"comment--avatar\"\r\n            style={{ background: comment.avatar }}\r\n          />\r\n        </div>\r\n        <div className=\"col-10 pl-2 pr-4\">\r\n          <div>{comment.text}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nComment.propTypes = {\r\n  comment: PropTypes.objectOf(PropTypes.any).isRequired\r\n};\r\n\r\nexport default Comment;\r\n","import React from 'react';\r\n\r\nconst NoComments = () => {\r\n  return <div className=\"col-12\">Add some comments...</div>;\r\n};\r\n\r\nexport default NoComments;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { randomHexColor } from '../utils/randomHexColor';\r\n\r\nconst AddComment = ({ addComment, currentItemId }) => {\r\n  const [value, setValue] = useState('');\r\n\r\n  const handleKeyDown = event => {\r\n    const comment = {\r\n      id: currentItemId,\r\n      avatar: randomHexColor(),\r\n      text: value\r\n    };\r\n\r\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=79407\r\n    if ((event.keyCode === 10 || event.keyCode === 13) && event.ctrlKey) {\r\n      addComment(comment);\r\n      setValue('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"w-100\">\r\n      <div className=\"form-row\">\r\n        <div className=\"col-2 pl-4\">\r\n          <div className=\"comment--avatar comment--avatar-main\" />\r\n        </div>\r\n        <div className=\"col-10 pl-2 pr-4\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            rows=\"3\"\r\n            value={value}\r\n            onChange={e => setValue(e.target.value)}\r\n            onKeyDown={handleKeyDown}\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddComment.propTypes = {\r\n  addComment: PropTypes.func.isRequired,\r\n  currentItemId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default AddComment;\r\n","export function randomHexColor() {\r\n  /* eslint no-bitwise: [\"error\", { \"allow\": [\"<<\"] }] */\r\n  return `#${((Math.random() * 0xffffff) << 0).toString(16)}`;\r\n}\r\n","import React from 'react';\r\n\r\nconst NoCurrentItem = () => {\r\n  return <div className=\"col-12\">Choose item to see and add comments...</div>;\r\n};\r\n\r\nexport default NoCurrentItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Comment from './Comment';\r\nimport NoComments from './NoComments';\r\nimport AddComment from './AddComment';\r\nimport NoCurrentItem from './NoCurrentItem';\r\nimport { ADD_COMMENT } from '../actions/actionTypes';\r\n\r\nconst Comments = ({ currentItem, addComment, comments }) => {\r\n  const isItemNullOrEmpty =\r\n    !currentItem || Object.keys(currentItem).length === 0;\r\n\r\n  const [currentItemComments, setCurrentItemComments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setCurrentItemComments(comments[(currentItem?.id)]);\r\n  }, [comments, currentItem, currentItemComments]);\r\n\r\n  return (\r\n    <div className=\"card shadow-sm bg-white rounded\">\r\n      <div className=\"card-body\">\r\n        <h2 className=\"card-title right-view--title\">\r\n          Comments{' '}\r\n          {isItemNullOrEmpty ? null : `#${currentItem.id.split('-')[0]}`}\r\n        </h2>\r\n        {isItemNullOrEmpty ? (\r\n          <NoCurrentItem />\r\n        ) : (\r\n          <div className=\"card-text\">\r\n            <div className=\"row pt-2\">\r\n              {!currentItemComments?.length ? (\r\n                <NoComments />\r\n              ) : (\r\n                currentItemComments.map((comment, i) => (\r\n                  // eslint-disable-next-line react/no-array-index-key\r\n                  <div key={comment.id + i} className=\"pt-5 col-12 p-0\">\r\n                    <Comment comment={comment} />\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n            {currentItem && Object.keys(currentItem).length > 0 ? (\r\n              <div className=\"row pt-5\">\r\n                <AddComment\r\n                  addComment={addComment}\r\n                  currentItemId={currentItem.id}\r\n                />\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  currentItem: state.currentItem.selectedEntry,\r\n  comments: state.comments.entries\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addComment: comment => dispatch({ type: ADD_COMMENT, payload: comment })\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Comments);\r\n","import React from 'react';\r\nimport '../scss/RightView.scss';\r\nimport Items from '../components/Items';\r\nimport Comments from '../components/Comments';\r\n\r\nconst RightView = () => (\r\n  <div className=\"container-fluid p-4\">\r\n    <div className=\"row\">\r\n      <div className=\"col-6\">\r\n        <Items />\r\n      </div>\r\n      <div className=\"col-6\">\r\n        <Comments />\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default RightView;\r\n","import React from 'react';\r\nimport LeftView from './views/LeftView';\r\nimport RightView from './views/RightView';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container-fluid h-100\">\r\n      <div className=\"row h-100 fixed-top\">\r\n        <div className=\"col-3 hidden-md-down left-view\">\r\n          <LeftView />\r\n        </div>\r\n        <div className=\"col-9 col-sm-9 col-md-9 col-lg-9 col-xl-9\">\r\n          <RightView />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { ADD_ITEM, REMOVE_ITEM } from '../actions/actionTypes';\r\n\r\nconst handlers = {\r\n  [ADD_ITEM]: (state, payload) => {\r\n    return { ...state, entries: [...state.entries, payload] };\r\n  },\r\n  [REMOVE_ITEM]: (state, payload) => {\r\n    const localItems = state.entries.filter(item => item.id !== payload);\r\n    return { ...state, entries: localItems };\r\n  },\r\n  DEFAULT: state => state\r\n};\r\n\r\nconst initialState = {\r\n  entries: []\r\n};\r\n\r\nexport default function itemsReducer(state = initialState, action) {\r\n  const handler = handlers[action.type] || handlers.DEFAULT;\r\n  return handler(state, action.payload);\r\n}\r\n","import { SELECT_ITEM, REMOVE_CURRENT_ITEM } from '../actions/actionTypes';\r\n\r\nconst handlers = {\r\n  [SELECT_ITEM]: (state, payload) => {\r\n    return { ...state, selectedEntry: payload };\r\n  },\r\n  [REMOVE_CURRENT_ITEM]: state => {\r\n    return { ...state, selectedEntry: null };\r\n  },\r\n  DEFAULT: state => state\r\n};\r\n\r\nconst initialState = {\r\n  selectedEntry: {}\r\n};\r\n\r\nexport default function currentItemReducer(state = initialState, action) {\r\n  const handler = handlers[action.type] || handlers.DEFAULT;\r\n  return handler(state, action.payload);\r\n}\r\n","import { ADD_COMMENT, REMOVE_ALL_COMMENTS } from '../actions/actionTypes';\r\n\r\nconst handlers = {\r\n  [ADD_COMMENT]: (state, payload) => {\r\n    const normalComments = { ...state.entries };\r\n\r\n    if (typeof normalComments[payload.id] === 'undefined') {\r\n      normalComments[payload.id] = [payload];\r\n    } else {\r\n      normalComments[payload.id].push(payload);\r\n    }\r\n\r\n    return { ...state, entries: normalComments };\r\n  },\r\n  [REMOVE_ALL_COMMENTS]: (state, payload) => {\r\n    const normalComments = { ...state.entries };\r\n    delete normalComments[payload];\r\n    return {\r\n      ...state,\r\n      entries: normalComments\r\n    };\r\n  },\r\n  DEFAULT: state => state\r\n};\r\n\r\nconst initialState = {\r\n  entries: {}\r\n};\r\n\r\nexport default function commentsReducer(state = initialState, action) {\r\n  const handler = handlers[action.type] || handlers.DEFAULT;\r\n  return handler(state, action.payload);\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport itemsReducer from './itemsReducer';\r\nimport currentItemReducer from './currentItemReducer';\r\nimport commentsReducer from './commentsReducer';\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  currentItem: currentItemReducer,\r\n  comments: commentsReducer\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './scss/custom.scss';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, compose } from 'redux';\r\nimport throttle from 'lodash/throttle';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport rootReducer from './reducers';\r\nimport { loadState, saveState } from './localStorageRedux';\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== 'undefined' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nconst preloadedState = loadState();\r\n\r\nconst store = createStore(rootReducer, preloadedState, composeEnhancers());\r\n\r\nstore.subscribe(\r\n  throttle(() => {\r\n    saveState({\r\n      items: store.getState().items,\r\n      currentItem: store.getState().currentItem,\r\n      comments: store.getState().comments\r\n    });\r\n  }, 1000)\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem('state');\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    console.error(err);\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n"],"sourceRoot":""}